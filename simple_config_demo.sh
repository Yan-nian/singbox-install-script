#!/bin/bash

# 简化配置功能使用示例
# 演示如何使用只需要节点名称的配置功能

echo "=== Sing-Box 简化配置使用示例 ==="
echo ""

# 颜色定义
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

echo -e "${CYAN}🎯 简化配置功能介绍${NC}"
echo ""
echo "传统配置方式需要用户手动输入："
echo "  ❌ 服务器地址"
echo "  ❌ 端口号"
echo "  ❌ UUID"
echo "  ❌ 密码"
echo "  ❌ 域名"
echo "  ❌ 路径"
echo "  ❌ Reality密钥"
echo "  ❌ 各种复杂参数"
echo ""
echo -e "${GREEN}✅ 简化配置只需要：${NC}"
echo "  📝 节点名称 (例如: my-node)"
echo "  🤖 其他参数全部自动生成"
echo ""

echo -e "${YELLOW}════════════════════════════════════════════════════════════${NC}"
echo ""

echo -e "${BLUE}📋 使用步骤：${NC}"
echo ""
echo "1. 运行脚本："
echo "   ${GREEN}sudo ./sing-box.sh${NC}"
echo ""
echo "2. 选择 [1] 添加配置"
echo ""
echo "3. 选择 [1] 🚀 快速配置 (只需要节点名称)"
echo ""
echo "4. 选择协议类型：" 
echo "   [1] VLESS Reality (推荐)"
echo "   [2] VMess"
echo "   [3] Hysteria2"
echo "   [4] Shadowsocks"
echo ""
echo "5. 输入节点名称 (例如: my-vless-node)"
echo ""
echo "6. 确认配置，系统自动生成所有参数！"
echo ""

echo -e "${YELLOW}════════════════════════════════════════════════════════════${NC}"
echo ""

echo -e "${CYAN}🚀 VLESS Reality 自动配置示例${NC}"
echo ""
echo "输入节点名称: ${GREEN}my-vless-node${NC}"
echo ""
echo "自动生成的配置："
echo "  📡 端口: 23456 (随机生成)"
echo "  🔑 UUID: 12345678-1234-1234-1234-123456789abc"
echo "  🌐 SNI: www.google.com"
echo "  🔒 Private Key: 自动生成"
echo "  🔓 Public Key: 自动生成"
echo "  🏷️ Short ID: abc12345"
echo ""
echo "生成的分享链接："
echo "  ${BLUE}vless://12345678-1234-1234-1234-123456789abc@YOUR_SERVER_IP:23456?...${NC}"
echo ""

echo -e "${CYAN}🔧 VMess 自动配置示例${NC}"
echo ""
echo "输入节点名称: ${GREEN}my-vmess-node${NC}"
echo ""
echo "自动生成的配置："
echo "  📡 端口: 34567 (随机生成)"
echo "  🔑 UUID: 87654321-4321-4321-4321-abcdef123456"
echo "  🌐 域名: www.google.com"
echo "  📝 路径: /abc12345"
echo ""
echo "生成的分享链接："
echo "  ${BLUE}vmess://eyJhZGQiOiJZT1VSX1NFUlZFUl9JUCIsInBvcnQiOiIzNDU2NyIs...${NC}"
echo ""

echo -e "${CYAN}⚡ Hysteria2 自动配置示例${NC}"
echo ""
echo "输入节点名称: ${GREEN}my-hy2-node${NC}"
echo ""
echo "自动生成的配置："
echo "  📡 端口: 45678 (随机生成)"
echo "  🔐 密码: RandomPass123456"
echo "  🌐 域名: www.google.com"
echo ""
echo "生成的分享链接："
echo "  ${BLUE}hysteria2://RandomPass123456@YOUR_SERVER_IP:45678?...${NC}"
echo ""

echo -e "${CYAN}🛡️ Shadowsocks 自动配置示例${NC}"
echo ""
echo "输入节点名称: ${GREEN}my-ss-node${NC}"
echo ""
echo "自动生成的配置："
echo "  📡 端口: 56789 (随机生成)"
echo "  🔐 密码: SSRandomPass123"
echo "  🔧 方法: 2022-blake3-chacha20-poly1305"
echo ""
echo "生成的分享链接："
echo "  ${BLUE}ss://MjAyMi1ibGFrZTMtY2hhY2hhMjAtcG9seTEzMDU6U1NSYW5kb21QYXNzMTIz...${NC}"
echo ""

echo -e "${YELLOW}════════════════════════════════════════════════════════════${NC}"
echo ""

echo -e "${GREEN}🎉 简化配置的优势：${NC}"
echo ""
echo "1. 🎯 极简操作："
echo "   • 只需要输入一个节点名称"
echo "   • 无需记忆复杂参数"
echo "   • 适合所有用户群体"
echo ""
echo "2. ⚡ 高效部署："
echo "   • 30秒内完成配置"
echo "   • 自动生成安全参数"
echo "   • 即时获得分享链接"
echo ""
echo "3. 🔧 智能化："
echo "   • 端口冲突检测"
echo "   • 最优参数选择"
echo "   • 自动服务重启"
echo ""
echo "4. 🛡️ 安全性："
echo "   • 随机生成密钥"
echo "   • 符合协议规范"
echo "   • 最佳安全配置"
echo ""
echo "5. 🤖 自动化："
echo "   • 配置文件生成"
echo "   • 数据库记录"
echo "   • 服务管理"
echo ""

echo -e "${YELLOW}════════════════════════════════════════════════════════════${NC}"
echo ""

echo -e "${BLUE}💡 使用建议：${NC}"
echo ""
echo "1. 节点命名建议："
echo "   • 使用有意义的名称 (如: hk-node, us-node)"
echo "   • 避免特殊字符"
echo "   • 保持简洁明了"
echo ""
echo "2. 协议选择建议："
echo "   • 推荐使用 VLESS Reality (最佳性能+安全)"
echo "   • VMess 适合兼容性需求"
echo "   • Hysteria2 适合高速需求"
echo "   • Shadowsocks 适合简单需求"
echo ""
echo "3. 部署建议："
echo "   • 定期更新配置"
echo "   • 监控服务状态"
echo "   • 备份重要配置"
echo ""

echo -e "${YELLOW}════════════════════════════════════════════════════════════${NC}"
echo ""

echo -e "${GREEN}✅ 总结：${NC}"
echo ""
echo "简化配置功能让 Sing-Box 的使用变得极其简单："
echo ""
echo "🎯 从复杂的多参数输入 → 简单的节点名称输入"
echo "⚡ 从繁琐的手动配置 → 智能的自动生成"
echo "🔧 从容易出错的过程 → 可靠的自动化流程"
echo "🚀 从技术门槛高 → 人人都能使用"
echo ""
echo "现在您只需要："
echo "1. 想一个节点名称"
echo "2. 选择协议类型"
echo "3. 点击确认"
echo "4. 获得完整配置和分享链接"
echo ""
echo -e "${CYAN}🎉 享受简化配置带来的便利吧！${NC}"
